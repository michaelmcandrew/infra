---
- name: snapshot backup directory
  file: path={{ backup_snap }} state=directory
  become: yes
- name: snaphot backup directory for database dumps
  file: path={{ backup_snap }}/dbs state=directory
  become: yes
  when: backup_mysql
- name: script to rysnc files to {{ backup_snap }}files
  template: src=../templates/backup_snap.j2 dest=/usr/local/bin/backup_snap mode=a+x
  become: true
- name: script to create mysql dumps in {{ backup_snap }}dbs
  template: src=../templates/backup_mysql.j2 dest=/usr/local/bin/backup_mysql mode=a+x
  become: true
  when: backup_mysql
- name: cron to dump the mysql databases
  cron:
    name: "backup_mysql"
    cron_file: backup
    user: root
    minute: 0
    hour: 3,7,11,15,20,23
    job: "/usr/local/bin/backup_mysql"
  when: backup_mysql
  become: true
- name: cron to create the local snapshot
  cron:
    name: "backup_snap"
    cron_file: backup
    user: root
    minute: 20
    hour: 3,7,11,15,20,23
    job: "/usr/local/bin/backup_snap"
  become: true
- name: check if the backup-master root public key exists on the control machine
  delegate_to: localhost
  stat: path=/srv/infra/ansible/vault/public_keys/backup-master.root.pub
  register: backup_master_root_pub
- name: add backup-master public key to this machine
  authorized_key: user=remote_backup key="{{ lookup('file', '/srv/infra/ansible/vault/public_keys/backup-master.root.pub') }}"
  become: true
  when: backup_master_root_pub.stat.exists == true
- debug:
    msg: "WARNING: backup-master.root.pub was not found in vault/public_keys. This machine will not be backed up!"
  become: true
  when: backup_master_root_pub.stat.exists == false
- name: configure ssh tunnel
  include: ssh-tunnel.yml
  when: via_ssh_tunnel is defined and via_ssh_tunnel is defined == true
  tag: ssh-tunnel
